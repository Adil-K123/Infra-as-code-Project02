name: "Terraform-Infra-Apply-DevEnv"

on:
  push:
    branches:
      - dev
      - FeatureBranch1
  #pull_request:
    #branches:
      #- dev

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      # - name: Create symlink to modules directory
      #   run: ln -s ../modules ./dev/modules
      #   if: ${{ github.workspace }}/modules != './dev/modules'
      # - name: Setup Terraform
      #   uses: hashicorp/setup-terraform@v3
      #   with:
      #       cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      # - name: Terraform Init
      #   id: init
      #   run: terraform init
      #   working-directory: ./dev
      # - name: Terraform Plan
      #   id: plan
      #   run: terraform plan
      #   working-directory: ./dev 
      # - name: Terraform apply
      #   id: apply
      #   run: terraform apply --auto-approve 
      #   working-directory: ./dev
      - name: Configure AWS credentials
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
        run: aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID && aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY && aws configure set aws_default_region $AWS_DEFAULT_REGION
      - name: Install Ansible,boto and store ssh key in runner
        run: |
           python -m pip install --upgrade pip
           pip3 install ansible
           pip3 install boto3
           mkdir -p /home/runner/.ssh/
           touch /home/runner/.ssh/config
           touch /home/runner/.ssh/id_rsa
           echo -e "${{ secrets.ANSIBLE_SSH_KEY }}" > /home/runner/.ssh/flask_ec2.pem
           chmod 600 ~/.ssh/flask_ec2.pem
      - name: Fetch RDS endpoint from AWS
        run: |
           rds_endpoint=$(aws rds describe-db-instances --db-instance-identifier devproductreviewdb --query 'DBInstances[*].Endpoint.Address' --output text) 
           echo "RDS_ENDPOINT=${rds_endpoint}" >> $GITHUB_ENV
      - name: Deploy necessary applications to webservers and configure RDS mysql with playbook
        env:
           RDS_ENDPOINT: ${{ env.RDS_ENDPOINT }}
        run: |
           ansible-playbook -i ${{ github.workspace }}/ansible_playbook/inventory/hosts.aws_ec2.yaml -u ${{ secrets.webserver_user }} --private-key=/home/runner/.ssh/flask_ec2.pem main.yml --limit tag_Name_devWebServer* --extra-vars "*WebServer1=devWebServer1 rds_endpoint=${RDS_ENDPOINT} dbusername=${{ secrets.DBUSERNAME }} dbpassword=${{ secrets.DBPASSWORD }}"
        working-directory: ./ansible_playbook
      
          